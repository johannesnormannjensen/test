name: PR Labeler

on: 
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  label-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/github-script@v6
        with:
          script: |
            const title = context.payload.pull_request.title
            const existingLabels = context.payload.pull_request.labels
            const labels = [];
            
            const labelToMatches = {
              'pr:build': ['build'],
              'pr:ci': ['ci'],
              'pr:chore': ['chore'],
              'pr:documentation': ['docs'],
              'pr:feature': ['feat', 'feature'],
              'pr:bugfix': ['fix', 'bugfix'],
              'pr:improvement': ['impr'],
              'pr:performance': ['perf'],
              'pr:refactor': ['refact'],
              'pr:revert': ['revert'],
              'pr:style': ['style'],
              'pr:test': ['test'],
              'pr:hotfix': ['hotfix'],
            };

            const titleLabel = title && Object.entries(labelToMatches).find(([label,matches]) => matches.some(match => title.startsWith(match)) && label)?.[0];
            if(titleLabel) {
              labels.push(titleLabel)
            } else {
              core.setFailed('PR title does not follow contributing rules! \nGo to https://github.com/johannesnormannjensen/test/wiki for contributing rules');
              return;
            }
            
            const branchName = context.payload.pull_request.head.ref;
            const shouldDeleteOnMerge = !['release', 'develop', 'main'].some(match => branchName.includes(match));
            if(shouldDeleteOnMerge) {
              labels.push('pr:delete on merge');
            }
            
            const areNewPRLabelsAdded = labels.lenght && !labels.every(label => existingLabels.contains(label));
            if (areNewPRLabelsAdded) {
              const issue_number = context.payload.pull_request.number;
              const labelsToRemove = existingLabels.filter(label => label.startsWith('pr:'));
              core.info(`removing ${labelsToRemove}`);
              
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                name: existingLabels.filter(label => label.startsWith('pr:')),
              })
              core.info(`adding ${labels}`);
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                labels,
              });
            }
